package digital.alpinia.cvmanager.model;
// Generated 08-abr-2019 12:38:45 by Hibernate Tools 4.3.5.Final

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.hateoas.ResourceSupport;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Person generated by hbm2java
 */
@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "person", schema = "alpinia_cv", uniqueConstraints = @UniqueConstraint(columnNames = "document"))
public class Vehicle {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    private int id;

    /*@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ref_document_type")
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
    private DocumentType documentType;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ref_origin", nullable = false)
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
    private Origin origin;*/

    @Column(name = "document", unique = true, length = 15)
    private String document;

    @Column(name = "name", nullable = false, length = 50)
    private String name;

    @Column(name = "surname1", nullable = false, length = 60)
    private String surname1;

    @Column(name = "surname2", length = 60)
    private String surname2;

    @Column(name = "phone1", length = 15)
    private String phone1;

    @Column(name = "phone2", length = 15)
    private String phone2;

    @Column(name = "address", length = 100)
    private String address;

    @Column(name = "email", length = 100)
    private String email;

    /*@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
    @JsonIgnore
    private List<PersonExperience> personExperiences = new ArrayList<>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
    @JsonIgnore
    private List<PersonInterview> personInterviews = new ArrayList<>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
    @JsonIgnore
    private List<PersonQualification> personQualifications = new ArrayList<>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
    @JsonIgnore
    private List<PersonCertificate> personCertificates = new ArrayList<>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
    @JsonIgnore
    private List<PersonState> personStates = new ArrayList<>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
    @JsonIgnore
    private List<PersonSkill> personSkills = new ArrayList<>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
    @JsonIgnore
    private List<Referal> referals = new ArrayList<>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
    @JsonIgnore
    private List<PersonKnowledge> personKnowledges = new ArrayList<>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
    @JsonIgnore
    private List<PersonLanguage> personLanguages = new ArrayList<>(0);*/

}
